#!/bin/bash

help_message() {
  cat << EOH

Usage: stepssh [OPTION]
Get SSH Status and Login via Step-CLI

Options:
  -s --status status        Retreive the status 
  -e --emoji                Return the status in emoji form

  -l --login login          Login to your SSH CA

Envionment Variables:
  STEPSSH_LOGINEMAIL        Email used to authenticate to step
  STEPSSH_LOGINPROVISIONER  Provisioner used to authenticate
  BROWSER                   Browser to launch OIDC provisioner in

Requires step to be in path

EOH

  exit 1
}

check_status() {
  ssh-add -L | grep "$STEPSSH_LOGINEMAIL" > /dev/null
  STATUS=$?
}

status() {
  # We assume your already connected to your SSH Agent
  UNLOCKEDMESSAGE="Unlocked"
  LOCKEDMESSAGE="Locked"

  [[ $EMOJIOUT -eq 1 ]] && UNLOCKEDMESSAGE="ðŸ”“"
  [[ $EMOJIOUT -eq 1 ]] && LOCKEDMESSAGE="ðŸ”’"


  check_status
  [[ $STATUS -eq 0 ]] && echo $UNLOCKEDMESSAGE
  [[ $STATUS -eq 1 ]] && echo $LOCKEDMESSAGE

}

login() {
  check_status
  [[ $STATUS -eq 0 ]] && echo "Already Logged In" && exit 0
  mkfifo /tmp/sshlogin1
  step ssh login "$STEPSSH_LOGINEMAIL" --provisioner "$STEPSSH_LOGINPROVISIONER" 2> /tmp/sshlogin1 &
  
  URL=$(grep https:// /tmp/sshlogin1 -m 1)
  $BROWSER $URL

  cat /tmp/sshlogin1 > /dev/null
}

[[ $# -eq 0 ]] && help_message

while test $# != 0
do
	case "$1" in
	-s | --status | status) STATUSCHECK=1 ;;
	-e | --emoji) EMOJIOUT=1 ;;
        -l | --login | login) LOGIN=1 ;;
	*) help_message ;;
	esac
	shift
done

[[ STATUSCHECK -eq 1 ]] && status
[[ LOGIN -eq 1 ]] && login
